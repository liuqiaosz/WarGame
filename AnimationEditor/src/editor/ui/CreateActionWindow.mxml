<?xml version="1.0" encoding="utf-8"?>
<ui:PopUpWindowProxy xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:ui="editor.ui.*" width="600" height="370" xmlns:extension="editor.extension.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import editor.asset.ResourceManager;
			
			import lib.animation.avatar.cfg.ConfigAvatar;
			import lib.animation.avatar.cfg.ConfigAvatarAction;
			
			import mx.core.IVisualElement;
			
			private var _avatar:ConfigAvatar = null;
			private var _images:Vector.<Bitmap> = null;
			private var _frames:Array = [];
			public function set avatar(value:ConfigAvatar):void
			{
				_avatar = value;
				_images = ResourceManager.instance.getAssetById(_avatar.id);
				
				if(_images && _images.length)
				{
					for(var idx:int = 0; idx<_images.length; idx++)
					{
						var frame:ImageFrame = new ImageFrame();
						frame.image = _images[idx];
						frame.index = idx;
						_frames.push(frame);
						if(frames)
						{
							frames.addElement(frame);
						}
					}
				}
			}
			
			override protected function onClose():void
			{
				_avatar = null;
				_frames.length = 0;
				_images = null;
				frames.removeAllElements();
				super.onClose();
			}
			
			override protected function onCreated():void
			{
//				while(_frames && _frames.length)
				if(_frames)
				{
					for each(var frame:ImageFrame in _frames)
					{
						frames.addElement(frame);
					}
				}
				super.onCreated();	
			}
			
			protected function onPreview(event:MouseEvent):void
			{
				//预览动作
				if(checkParameter())
				{
					var window:ActionPreviewWindow = popup(ActionPreviewWindow) as ActionPreviewWindow;
					window.playPreview(_avatar.id,int(actionStart.textValue),int(actionEnd.textValue),int(duration.sliderValue));
				}
			}
			
			private function checkParameter():Boolean
			{
				if(!actionName.textValue)
				{
					showAlert("动作名不能为空");
					return false;
				}
				else
				{
					for each(var act:ConfigAvatarAction in _avatar.actions)
					{
						if(act.name == actionName.textValue)
						{
							showAlert("动作名不能重复");
							return false;
						}
					}
				}
				
				if(actionEnd.textValue)
				{
					if(int(actionEnd.textValue) >= _frames.length || int(actionEnd.textValue) <= int(actionStart.textValue))
					{
						showAlert("结束帧率非法");
						return false;
					}
				}
				return true;
			}
			
			private var _onCreateHandler:Function = null;
			public function set onActionCreate(value:Function):void
			{
				_onCreateHandler = value;
			}
			
			protected function onCreateClick(event:MouseEvent):void
			{
				if(checkParameter())
				{
					if(null != _onCreateHandler)
					{
						_onCreateHandler(actionName.textValue,int(actionStart.textValue),int(actionEnd.textValue),int(duration.sliderValue));
					}
					closeWindow();
				}
			}
			
		]]>
	</fx:Script>
	
	<ui:layout>
		<s:VerticalLayout paddingLeft="5" paddingTop="5" />
	</ui:layout>
	
	<extension:ExFormTextItem id="actionName" labelWidth="40" textWidth="160" labelText="名称" />
	<extension:ExFormTextItem id="actionStart" labelWidth="40" textWidth="160" labelText="开始" restrict="0-9"/>
	<extension:ExFormTextItem id="actionEnd" labelWidth="40" textWidth="160" labelText="结束" restrict="0-9" />
	<extension:ExFormSliderItem id="duration" width="100%" labelWidth="40" labelText="帧率"  sliderMax="2000" sliderMin="10" sliderStep="10" sliderValue="80" />
	
	<s:Scroller width="100%" height="160">
		<s:HGroup id="frames" width="100%" height="100%">
		</s:HGroup>
	</s:Scroller>
	
	<s:HGroup>
		<s:Button label="预览" click="onPreview(event)" />
		<s:Button label="创建" click="onCreateClick(event)" />
	</s:HGroup>
	
</ui:PopUpWindowProxy>
